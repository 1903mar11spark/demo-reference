<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
	 http://www.springframework.org/schema/context 
	 http://www.springframework.org/schema/context/spring-context-4.3.xsd"
	default-init-method="defaultInit"
	default-destroy-method="defaultDestroy">
	<!-- the default init and destroy attributes specify which method in EVERY 
		BEAN will be called at the appropriate lifecycle phase this can also be set 
		for specific beans instead of globally -->
	<!-- scope="prototype" attribute would cause a new instance of Author to 
		be created with each call to getBean("author") -->
	<bean name="author" class="com.revature.beans.Author">
		<!-- inject values into bean -->
		<property name="firstName" value="Edgar"></property>
		<property name="lastName" value="Poe"></property>
	</bean>

	<!-- Setter injection -->
	<bean name="flashcardWithSetter"
		class="com.revature.beans.FlashcardWithSetter" scope="prototype">
		<!-- name is the name of the field in the bean -->
		<!-- ref is the name OF THE BEAN being injected into this bean -->
		<property name="author" ref="author"></property>
	</bean>

	<!-- Constructor injection -->
	<bean name="flashcardWithConstructor"
		class="com.revature.beans.FlashcardWithConstructor" scope="prototype">
		<constructor-arg ref="author"></constructor-arg>
	</bean>

	<!-- autowiring -->
	<bean name="flashcardWithAutoByName"
		class="com.revature.beans.FlashcardWithAutoByName" autowire="byName"
		scope="prototype"></bean>
	<bean name="flashcardWithAutoByType"
		class="com.revature.beans.FlashcardWithAutoByType" autowire="byType"
		scope="prototype"></bean>

	<!-- to use stereotypes to register beans, include component-scan -->
	<context:component-scan
		base-package="com.revature"></context:component-scan>
</beans>
